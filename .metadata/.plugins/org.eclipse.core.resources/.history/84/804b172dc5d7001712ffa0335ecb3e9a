/* 고객 정보 조회 페이지 */
package All_Customer;

import java.sql.Connection;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.*;
import java.util.*;
import java.sql.Statement;
import java.sql.SQLException;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import MainSource.DB_Connection;

public class All_Customer_info {
	int width = 1000, height = 500;
	public Statement stmt = null;
	public ResultSet rs = null;
	private Font font1 = new Font("monospace", Font.BOLD, 15);
	private Font font2 = new Font("monospace", Font.BOLD, 20);
	private JFrame All_Customer_page = null;
	private Container Contentpane = null;
	
	private Connection conn = null;
	private Object columnNames[] = { "아이디", "이름", "성별", "연락처", "생일",
							"최근 방문", "등급", "가용 포인트", "누적 지불금액" };
	private JTextField SearchFld = null;	
	private Object newCustomerinfo[];

	String s_type = null, s_word = null; 	int st = 0;
	
	
	/* 생성자 */
	public All_Customer_info(JFrame BeforePage) {
		BeforePage.setVisible(false); // 이전 창 invisible
		

		All_Customer_page = new JFrame("고객 정보"); // 페이지 창
		All_Customer_page.setBounds(300, 200, width, height);
		All_Customer_page.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);		
		Contentpane = All_Customer_page.getContentPane();
		Search(0, null);	// 디폴트
		
	}
	public All_Customer_info(JFrame BeforePage, int st, String sw) {
		BeforePage.setVisible(false); // 이전 창 invisible
		
		All_Customer_page = new JFrame("고객 정보"); // 페이지 창
		All_Customer_page.setBounds(300, 200, width, height);
		All_Customer_page.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);		
		Contentpane = All_Customer_page.getContentPane();
		Search(st, sw);	// 디폴트 or 전체 조회 버튼 누를 경우 b = false, 검색 버튼 누를 경우 true
		
	}
	
	/* 리스너 함수 구현 */
	class MyItemListener implements ItemListener{
		public void itemStateChanged(ItemEvent e) {
			JComboBox selected = (JComboBox) e.getSource();
			s_type = selected.getSelectedItem().toString();
		}
	}
	class MyactionListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			String BtnStr[] = { "메뉴", "검색", "전체 조회", "추가", "삭제" };
			JButton pressed = (JButton) e.getSource();


			System.out.println(s_type);		
			if(pressed.getText().equals(BtnStr[0])) // "메뉴"클릭
				new CMS_MainPage.MainPage(All_Customer_page);
			
			if(pressed.getText().equals(BtnStr[1])) { // "검색"클릭


				s_word = SearchFld.getText();
				System.out.println(s_word);
				if(s_type.equals("아이디")) st = 1;
				else if (s_type.equals("이름")) st = 2;
				else if (s_type.equals("연락처")) st = 3;
				else if(s_type.equals("등급")) st = 4;
				
				System.out.println(st);
				new All_Customer_info(All_Customer_page, st, s_word); // 검색 후 창
				}	
			
			if(pressed.getText().equals(BtnStr[2])) { // "전체 조회" 클릭
				st = 0; s_word = null;
				new All_Customer_info(All_Customer_page);
			}
			
			if(pressed.getText().equals(BtnStr[3])) { // "추가" 클릭
				AddCustomerDialog ACD = new AddCustomerDialog(All_Customer_page, "고객 정보 추가");
				newCustomerinfo = ACD.getValues();
				
				
			}
				
		}
	}

	/* 조회 함수 */
	public void Search(int st, String sw) {
		String Search[] = {"SELECT * FROM CUSTOMER ORDER BY Cid ASC",
						   "SELECT * FROM CUSTOMER WHERE Cid = '"+sw+"' OR Cid like '%"+sw+"%' OR Cid like '%"+sw+"' OR Cid like '"+sw+"%' ORDER BY Cid ASC",
						   "SELECT * FROM CUSTOMER WHERE Cname = '"+sw+"' OR Cname like '%"+sw+"%' OR Cname like '%"+sw+"' OR Cname like '"+sw+"%' ORDER BY Cid ASC",
						   "SELECT * FROM CUSTOMER WHERE Cphone = '"+sw+"' OR Cphone like '%"+sw+"%' OR Cphone like '%"+sw+"' OR Cphone like '"+sw+"%' ORDER BY Cid ASC",
						   "SELECT * FROM CUSTOMER WHERE Cgrade = '"+sw+"' OR Cgrade like '%"+sw+"%' OR Cgrade like '%"+sw+"' OR Cgrade like '"+sw+"%' ORDER BY Cid ASC"};
		String sql = null;
		// DB연결
		new DB_Connection();
		this.conn = DB_Connection.conn;
		// 쿼리 준비
		try {
				sql = Search[st];
				stmt = this.conn.createStatement();
				stmt.execute(sql);
	
		} catch (SQLException e) {
			System.out.println(e);
		}
		// 쿼리 실행
		try {
			stmt.executeUpdate(sql);
		} catch (SQLException e) {
			System.out.println(e);
		}
		// 데이터 가져오기
		try {
			rs = stmt.executeQuery(sql);
		} catch (SQLException e) {
			System.out.println(e);
		}
		// 데이터 담기1
		Customer_info C_info = new Customer_info();
		Vector<Object[]> C = new Vector<Object[]>();
		try {
			while (rs.next()) { 
				int i = 1;
				C_info.Cid = rs.getString(i++);	C_info.Cname = rs.getString(i++);
				C_info.Csex = rs.getString(i++); C_info.Cphone = rs.getString(i++);
				C_info.Cbirth = rs.getDate(i++); C_info.Cdate = rs.getDate(i++);
				C_info.Cgrade = rs.getString(i++); C_info.Usable_point = rs.getInt(i++);
				C_info.Cumul_amount = rs.getInt(i++);
				C.add(C_info.toArray());	// 벡터에 한 행씩 담기
				System.out.println(C_info.Cid +" "+ C_info.Cname +" "+ C_info.Csex + " " + C_info.Cphone + " " +
				 C_info.Cbirth + " " + C_info.Cdate + " " + C_info.Cgrade);
			}
		} catch (SQLException e) {
			System.out.println(e);
		}
		

		DB_Connection.Disconnection(rs);
		DB_Connection.Disconnection(stmt);
		DB_Connection.Disconnection();
		
		int Cnum = C.size();
		Object [][]All_C_info = new Object[Cnum][];
		for(int i=0; i<Cnum; i++) {
			All_C_info[i] = C.get(i);
		}
		
		C.removeAllElements();
		
		ViewDesign(All_C_info);
		All_Customer_page.setVisible(true);
	}
	
	/* 추가 함수 */
	public void AddNewCustomer(Object[] newCustomerInfo){
		
	}
	
	/* 화면 디자인 */
	public void ViewDesign(Object[][] O) {
		MyactionListener actionlistener = new MyactionListener();
		MyItemListener itemlistener = new MyItemListener();
		
		// 메뉴버튼 -> panel1_1
		JPanel panel1_1 = new JPanel();
		JButton menuBtn = new JButton("메뉴");  menuBtn.setFont(font2);
		menuBtn.addActionListener(actionlistener);
		panel1_1.add(menuBtn);

		
		// 검색 콤보 + 검색 창 + 검색 버튼 -> panel1_2
		JPanel panel1_2 = new JPanel();
		JComboBox<String> jComboBox = new JComboBox<String>(new String[] {"[선택]", "아이디", "이름", "연락처", "등급"});
		jComboBox.setFont(font1);
		jComboBox.addItemListener(itemlistener);
		panel1_2.add(jComboBox);
		
		SearchFld = new JTextField(30);
		panel1_2.add(SearchFld);
		
		JButton searchBtn = new JButton("검색"); searchBtn.setFont(font1);
		searchBtn.addActionListener(actionlistener);
		panel1_2.add(searchBtn);
		
		// 전체 조회 버튼 -> panel1_3
		JPanel panel1_3 = new JPanel();
		JButton Search_all = new JButton("전체 조회");
		Search_all.addActionListener(actionlistener);
		panel1_3.add(Search_all);
		
		// panel1_1 + panel1_2 + panel1_3 -> panel1 (grid)
		JPanel panel1 = new JPanel();
		panel1.setLayout(new BorderLayout());
		panel1.add(panel1_1, BorderLayout.WEST);
		panel1.add(panel1_2, BorderLayout.CENTER);
		panel1.add(panel1_3, BorderLayout.EAST);

		
		// 테이블 -> ScrollPane
		DefaultTableModel defaultTabM = new DefaultTableModel(O, columnNames) {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};		
		JTable jTable = new JTable(defaultTabM);
		JScrollPane jScrollPane = new JScrollPane(jTable);
		
		// 추가 & 삭제 버튼 -> panel2
		JPanel panel2 = new JPanel();
		panel2.setPreferredSize(new Dimension(width, height/10));
		
		JButton insertBtn = new JButton("추가"); insertBtn.setFont(font1);
		insertBtn.addActionListener(actionlistener);
		panel2.add(insertBtn);
		
		JButton deleteBtn = new JButton("삭제"); deleteBtn.setFont(font1);
		deleteBtn.addActionListener(actionlistener);
		panel2.add(deleteBtn);
		
		// panel1, jScrollPane , panel2 -> Frame
		Contentpane.add(panel1, BorderLayout.NORTH);
		Contentpane.add(jScrollPane, BorderLayout.CENTER);
		Contentpane.add(panel2, BorderLayout.SOUTH);
	}
	

}
